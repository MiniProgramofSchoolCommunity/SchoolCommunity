<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="SchoolCommunity.SchoolCommunityBackendNew.mappers.ActivityBasicInfoMapper">
  <resultMap id="BaseResultMap" type="SchoolCommunity.SchoolCommunityBackendNew.model.ActivityBasicInfo">
    <id column="activityid" jdbcType="BIGINT" property="activityid" />
    <result column="publisherid" jdbcType="BIGINT" property="publisherid" />
    <result column="activityname" jdbcType="VARCHAR" property="activityname" />
    <result column="activityaddress" jdbcType="VARCHAR" property="activityaddress" />
    <result column="date" jdbcType="DATE" property="date" />
    <result column="time" jdbcType="TIME" property="time" />
    <result column="activityintro" jdbcType="VARCHAR" property="activityintro" />
    <result column="type" jdbcType="INTEGER" property="type" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    activityid, publisherid, activityname, activityaddress, date, time, activityintro, 
    type
  </sql>
  <select id="selectByExample" parameterType="SchoolCommunity.SchoolCommunityBackendNew.model.ActivityBasicInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from activitybasicinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from activitybasicinfo
    where activityid = #{activityid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from activitybasicinfo
    where activityid = #{activityid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="SchoolCommunity.SchoolCommunityBackendNew.model.ActivityBasicInfoExample">
    delete from activitybasicinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="SchoolCommunity.SchoolCommunityBackendNew.model.ActivityBasicInfo">
    <selectKey keyProperty="activityid" order="BEFORE" resultType="java.lang.Long">
      select nextval('activitybasicinfo_activityid_seq') as activityid
    </selectKey>
    insert into activitybasicinfo (activityid, publisherid, activityname, 
      activityaddress, date, time, 
      activityintro, type)
    values (#{activityid,jdbcType=BIGINT}, #{publisherid,jdbcType=BIGINT}, #{activityname,jdbcType=VARCHAR}, 
      #{activityaddress,jdbcType=VARCHAR}, #{date,jdbcType=DATE}, #{time,jdbcType=TIME}, 
      #{activityintro,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="SchoolCommunity.SchoolCommunityBackendNew.model.ActivityBasicInfo">
    <selectKey keyProperty="activityid" order="BEFORE" resultType="java.lang.Long">
      select nextval('activitybasicinfo_activityid_seq') as activityid
    </selectKey>
    insert into activitybasicinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      activityid,
      <if test="publisherid != null">
        publisherid,
      </if>
      <if test="activityname != null">
        activityname,
      </if>
      <if test="activityaddress != null">
        activityaddress,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="activityintro != null">
        activityintro,
      </if>
      <if test="type != null">
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{activityid,jdbcType=BIGINT},
      <if test="publisherid != null">
        #{publisherid,jdbcType=BIGINT},
      </if>
      <if test="activityname != null">
        #{activityname,jdbcType=VARCHAR},
      </if>
      <if test="activityaddress != null">
        #{activityaddress,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        #{date,jdbcType=DATE},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIME},
      </if>
      <if test="activityintro != null">
        #{activityintro,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="SchoolCommunity.SchoolCommunityBackendNew.model.ActivityBasicInfoExample" resultType="java.lang.Long">
    select count(*) from activitybasicinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update activitybasicinfo
    <set>
      <if test="record.activityid != null">
        activityid = #{record.activityid,jdbcType=BIGINT},
      </if>
      <if test="record.publisherid != null">
        publisherid = #{record.publisherid,jdbcType=BIGINT},
      </if>
      <if test="record.activityname != null">
        activityname = #{record.activityname,jdbcType=VARCHAR},
      </if>
      <if test="record.activityaddress != null">
        activityaddress = #{record.activityaddress,jdbcType=VARCHAR},
      </if>
      <if test="record.date != null">
        date = #{record.date,jdbcType=DATE},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=TIME},
      </if>
      <if test="record.activityintro != null">
        activityintro = #{record.activityintro,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update activitybasicinfo
    set activityid = #{record.activityid,jdbcType=BIGINT},
      publisherid = #{record.publisherid,jdbcType=BIGINT},
      activityname = #{record.activityname,jdbcType=VARCHAR},
      activityaddress = #{record.activityaddress,jdbcType=VARCHAR},
      date = #{record.date,jdbcType=DATE},
      time = #{record.time,jdbcType=TIME},
      activityintro = #{record.activityintro,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="SchoolCommunity.SchoolCommunityBackendNew.model.ActivityBasicInfo">
    update activitybasicinfo
    <set>
      <if test="publisherid != null">
        publisherid = #{publisherid,jdbcType=BIGINT},
      </if>
      <if test="activityname != null">
        activityname = #{activityname,jdbcType=VARCHAR},
      </if>
      <if test="activityaddress != null">
        activityaddress = #{activityaddress,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=DATE},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIME},
      </if>
      <if test="activityintro != null">
        activityintro = #{activityintro,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
    </set>
    where activityid = #{activityid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="SchoolCommunity.SchoolCommunityBackendNew.model.ActivityBasicInfo">
    update activitybasicinfo
    set publisherid = #{publisherid,jdbcType=BIGINT},
      activityname = #{activityname,jdbcType=VARCHAR},
      activityaddress = #{activityaddress,jdbcType=VARCHAR},
      date = #{date,jdbcType=DATE},
      time = #{time,jdbcType=TIME},
      activityintro = #{activityintro,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER}
    where activityid = #{activityid,jdbcType=BIGINT}
  </update>
</mapper>